{"version":3,"sources":["Layout/Header.js","utils/api/index.js","Layout/HomePage/Deck.js","Layout/HomePage/HomePage.js","Layout/Forms/DeckForm.js","Layout/NavBar.js","Layout/DeckPage/DeckHeader.js","Layout/DeckPage/Card.js","Layout/Forms/CardForm.js","Layout/StudyPage/StudyPage.js","Layout/DeckPage/DeckPage.js","Layout/NotFound.js","Layout/Layout.js","App.js","index.js"],"names":["Header","className","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","a","fetch","response","status","Error","statusText","json","name","listDecks","signal","createDeck","method","body","JSON","stringify","readDeck","deckId","createCard","card","Number","readCard","cardId","updateCard","updatedCard","id","deleteCard","Deck","history","useHistory","data-aos","length","description","to","type","onClick","window","confirm","deleteDeck","then","go","HomePage","useState","decks","setDecks","useEffect","loadDecks","createDeckButton","map","renderDecks","append","DeckForm","props","formData","setFormData","handleSubmit","event","preventDefault","push","handleChange","target","value","handleCancel","onSubmit","htmlFor","placeholder","onChange","rows","NavBar","currentPage","pastPage","aria-label","aria-current","DeckHeader","params","useRouteMatch","Card","front","back","loadDelete","CardForm","isEdit","useParams","cardFromAPI","loadCard","newCard","loadUpdate","loadCreate","goBack","StudyPage","currentCard","setCurrentCard","isCardFront","setIsCardFront","flipState","DeckPage","setDeck","setCards","deckFromAPI","loadDeck","exact","path","NotFound","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0520bba.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the request.\n * @param options\n *  any options for fetch\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options) {\n  try {\n    const response = await fetch(url, options);\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      throw error;\n    }\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { deleteDeck } from \"../../utils/api\";\n\nexport default function Deck({ deck }) {\n  const history = useHistory();\n\n  // HANDLE DELETE\n  const handleDelete = () => {\n    if (\n      window.confirm(\"Delete this deck? You will not be able to recover it.\")\n    ) {\n      deleteDeck(deck.id).then(history.go(0));\n    }\n  };\n\n  return (\n    <div key={deck.id} className=\"row my-4\">\n      <div className=\"card\" data-aos=\"fade-up\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">{deck.name}</h4>\n          <p>\n            <em>{deck.cards.length} cards</em>\n          </p>\n          <h6 className=\"card-subtitle mb-3 text-muted\">{deck.description}</h6>\n          <div className=\"row button-row\">\n            <div className=\"col-9 view-col\">\n              <Link to={`/decks/${deck.id}`}>\n                <button type=\"button\" className=\"btn btn-secondary mx-1\">\n                  <span className=\"oi oi-eye mr-1\"></span>View\n                </button>\n              </Link>\n              <Link to={`/decks/${deck.id}/study`}>\n                <button type=\"button\" className=\"btn btn-primary mx-1\">\n                  <span className=\"oi oi-book mr-1\"></span>Study\n                </button>\n              </Link>\n            </div>\n            <div className=\"col-3 del-col\">\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={handleDelete}\n              >\n                <span className=\"oi oi-trash\"></span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { listDecks } from \"../../utils/api\";\nimport Deck from \"./Deck\";\n\nexport default function HomePage() {\n  // LOAD DECKS\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    async function loadDecks() {\n      const response = await listDecks();\n      setDecks(response);\n    }\n    loadDecks();\n  }, []);\n\n  // CREATE DECK BUTTON\n  const createDeckButton = (\n    <Link to={`/decks/new`}>\n      <button type=\"button\" className=\"btn btn-secondary\">\n        <span className=\"oi oi-plus mr-1\"></span>Create Deck\n      </button>\n    </Link>\n  );\n\n  // LIST OF DECKS\n  const renderDecks = (decks) => {\n    return decks.map((deck) => <Deck deck={deck} />);\n  };\n\n  return (\n    <div className=\"container home\">\n      {createDeckButton}\n      <div className=\"col col-md-6 mx-auto my-4\">\n        <h2>Decks:</h2>\n        {renderDecks(decks)}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createDeck } from \"../../utils/api\";\n\nexport default function DeckForm(props = { name: \"\", description: \"\" }) {\n  // LOAD INITIAL DATA\n  // (BLANK UNLESS GIVEN PROPS)\n  const [formData, setFormData] = useState({});\n  useEffect(() => setFormData(props), [props]);\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createDeck({ ...formData }).then((deck) =>\n      history.push(`/decks/${deck.id}`)\n    );\n  };\n  const handleChange = ({ target }) => {\n    setFormData({\n      ...formData,\n      [target.name]: target.value,\n    });\n  };\n  const handleCancel = (event) => {\n    event.preventDefault();\n    history.push(\"/\");\n  };\n\n  return (\n    <form className=\"py-3\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"name\">Name</label>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Deck name\"\n          name=\"name\"\n          onChange={handleChange}\n          value={formData.name}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          className=\"form-control\"\n          rows=\"3\"\n          placeholder=\"Brief description of the deck\"\n          name=\"description\"\n          onChange={handleChange}\n          value={formData.description}\n        />\n      </div>\n      <button onClick={handleCancel} className=\"btn btn-secondary mx-1\">\n        Cancel\n      </button>\n      <button type=\"submit\" className=\"btn btn-primary mx-1\">\n        Submit\n      </button>\n    </form>\n  );\n}\n","/**\n * When given a route that is one level from Home,\n * renders Home with a link and CurrentPage without (active).\n * When given a route that is two levels from home,\n * renders the level before CurrentPage with a link.\n */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NavBar({ currentPage, pastPage = {} }) {\n  const renderPastPage = () => {\n    return (\n      pastPage.url && (\n        <li className=\"breadcrumb-item\">\n          <Link to={pastPage.url}>{pastPage.name}</Link>\n        </li>\n      )\n    );\n  };\n\n  return (\n    <nav aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <Link to=\"/\">Home</Link>\n        </li>\n        {renderPastPage()}\n        <li className=\"breadcrumb-item active\" aria-current=\"page\">\n          {currentPage}\n        </li>\n      </ol>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\n\nexport default function DeckHeader(params) {\n  const { url } = useRouteMatch();\n  const history = useHistory();\n\n  return (\n    <div className=\"deck-header py-4\">\n      <h3>{params.name}</h3>\n      <p>{params.description}</p>\n      <div className=\"my-3\">\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mx-1\"\n          onClick={() => history.push(`${url}/edit`)}\n        >\n          <span className=\"oi oi-pencil mr-1\"></span>Edit\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary mx-1\"\n          onClick={() => history.push(`${url}/study`)}\n        >\n          <span className=\"oi oi-book mr-1\"></span>Study\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary mx-1\"\n          onClick={() => history.push(`${url}/cards/new`)}\n        >\n          <span className=\"oi oi-plus mr-1\"></span>Add Cards\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { deleteCard } from \"../../utils/api\";\n\nexport default function Card({ card }) {\n  const history = useHistory();\n  const { url } = useRouteMatch();\n\n  const handleEdit = () => {\n    history.push(`${url}/cards/${card.id}/edit`);\n  };\n  const handleDelete = () => {\n    if (\n      window.confirm(\"Delete this card? You will not be able to recover it.\")\n    ) {\n      async function loadDelete() {\n        await deleteCard(card.id);\n      }\n      loadDelete();\n      history.go(0);\n    }\n  };\n\n  return (\n    <li key={card.id} className=\"list-group-item\">\n      <div className=\"row\">\n        <div className=\"col col-6\">{card.front}</div>\n        <div className=\"col col-6\">\n          {card.back}\n          <br />\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary mx-2 my-3\"\n            onClick={handleEdit}\n          >\n            <span className=\"oi oi-pencil mr-1\"></span>Edit\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={handleDelete}\n          >\n            <span className=\"oi oi-trash\"></span>\n          </button>\n        </div>\n      </div>\n    </li>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { createCard, readCard, updateCard } from \"../../utils/api\";\n\nexport default function CardForm({ isEdit = false }) {\n  // LOAD INITIAL DATA\n  // (BLANK UNLESS GIVEN PROPS)\n  const params = useParams();\n  const [formData, setFormData] = useState({});\n  useEffect(() => {\n    const init = { name: \"\", description: \"\" };\n    setFormData(init);\n    if (params.cardId) {\n      async function loadCard() {\n        const cardFromAPI = await readCard(params.cardId);\n        setFormData(cardFromAPI);\n      }\n      loadCard();\n    }\n  }, [params.cardId]);\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    async function loadUpdate() {\n      const updatedCard = await updateCard({ ...formData });\n      history.push(`/decks/${updatedCard.deckId}`);\n    }\n    async function loadCreate() {\n      const newCard = await createCard(params.deckId, { ...formData });\n      history.push(`/decks/${newCard.deckId}`);\n    }\n    isEdit ? loadUpdate() : loadCreate();\n  };\n  const handleChange = ({ target }) => {\n    setFormData({\n      ...formData,\n      [target.name]: target.value,\n    });\n  };\n  const handleCancel = (event) => {\n    event.preventDefault();\n    history.goBack();\n  };\n\n  return (\n    <form className=\"py-3\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"front\">Front</label>\n        <textarea\n          id=\"front\"\n          className=\"form-control\"\n          rows=\"3\"\n          placeholder=\"Front side of card\"\n          name=\"front\"\n          onChange={handleChange}\n          value={formData.front}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"back\">Back</label>\n        <textarea\n          id=\"back\"\n          className=\"form-control\"\n          rows=\"3\"\n          placeholder=\"Back side of card\"\n          name=\"back\"\n          onChange={handleChange}\n          value={formData.back}\n        />\n      </div>\n      <button onClick={handleCancel} className=\"btn btn-secondary mx-1\">\n        Cancel\n      </button>\n      <button type=\"submit\" className=\"btn btn-primary mx-1\">\n        Submit\n      </button>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nexport default function StudyPage({ cards }) {\n  const history = useHistory();\n  const { deckId } = useParams();\n  const [currentCard, setCurrentCard] = useState(1);\n  const [isCardFront, setIsCardFront] = useState(true);\n\n  const card = cards[currentCard - 1];\n\n  // HELPER FUNCTIONS //\n  const flipState = () => setIsCardFront(!isCardFront);\n  const handleRestart = () => {\n    if (\n      window.confirm(\n        \"Restart cards? Click 'cancel' to return to the home page.\"\n      )\n    ) {\n      setCurrentCard(1);\n      flipState();\n    } else {\n      history.push(\"/\");\n    }\n  };\n  const incrementCard = () => {\n    if (currentCard < cards.length) {\n      setCurrentCard(currentCard + 1);\n      flipState();\n    } else {\n      handleRestart();\n    }\n  };\n\n  if (cards.length > 2) {\n    return (\n      <div className=\"card study-card px-3 my-4\" data-aos=\"fade-up\">\n        <div className=\"card-body\">\n          <div className=\"row my-1\">\n            <h4 className=\"card-title\">\n              Card {currentCard} of {cards.length}\n            </h4>\n          </div>\n          <div className=\"row my-1\">{isCardFront ? card.front : card.back}</div>\n          <div className=\"row my-3\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary mx-2 my-3\"\n              onClick={flipState}\n            >\n              <span className=\"oi oi-action-redo mr-1\"></span>Flip\n            </button>\n            {!isCardFront && (\n              <button\n                type=\"button\"\n                className=\"btn btn-primary mx-2 my-3\"\n                onClick={incrementCard}\n              >\n                <span className=\"oi oi-arrow-right mr-1\"></span>Next\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <h3>Not enough cards.</h3>\n      <p>\n        You need at least 3 cards to study. There are {cards.length} cards in\n        this deck.\n      </p>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary mx-1\"\n        onClick={() => history.push(`/decks/${deckId}/cards/new`)}\n      >\n        <span className=\"oi oi-plus mr-1\"></span>Add Cards\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useRouteMatch, useParams } from \"react-router-dom\";\n\nimport { readDeck } from \"../../utils/api\";\nimport DeckForm from \"../Forms/DeckForm\";\nimport NavBar from \"../NavBar\";\nimport DeckHeader from \"./DeckHeader\";\nimport Card from \"./Card\";\nimport CardForm from \"../Forms/CardForm\";\nimport StudyPage from \"../StudyPage/StudyPage\";\n\nexport default function DeckPage() {\n  const params = useParams();\n  const { url } = useRouteMatch();\n\n  // LOAD DECK AND CARDS\n  const [deck, setDeck] = useState({});\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    async function loadDeck() {\n      const deckFromAPI = await readDeck(params.deckId);\n      setDeck(deckFromAPI);\n      setCards(deckFromAPI.cards);\n    }\n    loadDeck();\n  }, [params]);\n\n  if (deck.id) {\n    return (\n      <Switch>\n        <Route exact path={url}>\n          <NavBar currentPage={deck.name} />\n          <DeckHeader {...deck} />\n          <h2>Cards</h2>\n          <div className=\"card my-4\" data-aos=\"fade-up\">\n            <ul className=\"list-group list-group-flush\">\n              {cards.map((card) => (\n                <Card key={card.id} card={card} />\n              ))}\n            </ul>\n          </div>\n        </Route>\n\n        <Route path={`${url}/edit`}>\n          <NavBar\n            pastPage={{ url: url, name: deck.name }}\n            currentPage=\"Edit Deck\"\n          />\n          <div className=\"col col-md-6 mx-auto my-4\">\n            <h2>Edit Deck</h2>\n            <DeckForm {...deck} />\n          </div>\n        </Route>\n\n        <Route path={\"/decks/:deckId/study\"}>\n          <NavBar\n            pastPage={{ url: url, name: deck.name }}\n            currentPage=\"Study\"\n          />\n          <div className=\"col col-md-6 mx-auto my-4\">\n            <h2>Study</h2>\n            <h2>{deck.name}</h2>\n            <StudyPage cards={deck.cards} />\n          </div>\n        </Route>\n\n        <Route path={`/decks/:deckId/cards/new`}>\n          <NavBar\n            pastPage={{ url: url, name: deck.name }}\n            currentPage=\"New Card\"\n          />\n          <div className=\"col col-md-6 mx-auto my-4\">\n            <h2>{deck.name}</h2>\n            <h2>Add Card</h2>\n            <CardForm />\n          </div>\n        </Route>\n\n        <Route path={`/decks/:deckId/cards/:cardId/edit`}>\n          <NavBar\n            pastPage={{ url: url, name: deck.name }}\n            currentPage=\"Edit Card\"\n          />\n          <div className=\"col col-md-6 mx-auto my-4\">\n            <h2>Edit Card</h2>\n            <CardForm isEdit=\"true\" />\n          </div>\n        </Route>\n      </Switch>\n    );\n  }\n  return \"Loading...\";\n}\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport HomePage from \"./HomePage/HomePage\";\nimport DeckForm from \"./Forms/DeckForm\";\nimport DeckPage from \"./DeckPage/DeckPage\";\nimport NotFound from \"./NotFound\";\n\nexport default function Layout() {\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/decks/new\">\n            <div className=\"col col-md-6 mx-auto my-4\">\n              <h2>Create Deck</h2>\n              <DeckForm />\n            </div>\n          </Route>\n          <Route path=\"/decks/:deckId\">\n            <DeckPage />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout/Layout\";\nimport \"./App.css\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}